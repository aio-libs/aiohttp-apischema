name: CI

on:
  push:
    branches:
      - master
      - '[0-9].[0-9]+'  # matches to backport branches, e.g. 3.6
    tags: [ 'v*' ]
  pull_request:
    branches:
      - master
      - '[0-9].[0-9]+'


jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: requirements-dev.txt
    - name: Install itself
      run: |
        pip install .
    - name: Run linter
      run: mypy
    - name: Prepare twine checker
      run: |
        pip install -U build twine wheel
        python -m build
    - name: Run twine checker
      run: |
        twine check dist/*

  swagger_ui:
    name: Swagger UI
    runs-on: ubuntu-latest
    steps:
    - name: Get current week for cache key
      id: get-date
      run: echo "date=$(date '+%Y%U')" >> $GITHUB_OUTPUT
      shell: bash
    - name: Cache swagger files
      uses: actions/cache@v4
      id: cache
      with:
        key: swagger-${{ steps.get-date.outputs.date }}
        path:  swagger-ui
    - name: Create directory to unpack into
      if: steps.cache.outputs.cache-hit != 'true'
      run: mkdir swagger-ui
    - name: Download/Unpack swagger-ui
      if: steps.cache.outputs.cache-hit != 'true'
      run: curl -L $(curl -L 'https://api.github.com/repos/swagger-api/swagger-ui/releases?per_page=1' | jq -r .[0].tarball_url) | tar --wildcards --no-wildcards-match-slash -C swagger-ui -xz 'swagger-api-swagger-ui-*/dist/' --strip-components=2
    - name: Update URL
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sed -i -e 's/url:.*/url: document.getElementById("swagger-ui").dataset.url,/g' swagger-ui/swagger-initializer.js
    - name: Upload swagger-ui files
      uses: actions/upload-artifact@v4
      with:
        name: swagger-ui
        path: swagger-ui/
        if-no-files-found: error

  test:
    name: Test
    needs: swagger_ui
    strategy:
      matrix:
        pyver: ['3.10', '3.11', '3.12']
        os: [ubuntu, macos, windows]
        include:
          - pyver: pypy-3.10
            os: ubuntu
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Restore swagger-ui files
      uses: actions/download-artifact@v4
      with:
        name: swagger-ui
        path: aiohttp_apischema/swagger-ui/
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyver }}
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: requirements.txt
    - name: Run unittests
      run: pytest
      env:
        COLOR: 'yes'
    - run: python -m coverage xml
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  check:  # This job does nothing and is only used for the branch protection
    if: always()

    needs: [lint, test]

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  deploy:
    name: Deploy
    environment: pypi
    runs-on: ubuntu-latest
    needs: [check, swagger_ui]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    permissions:
      contents: write  # GitHub Releases
      id-token: write  # Trusted publishing & sigstore
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Restore swagger-ui files
      uses: actions/download-artifact@v4
      with:
        name: swagger-ui
        path: aiohttp_apischema/swagger-ui/
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install dependencies
      run:
        python -m pip install -U pip wheel setuptools build twine
    - name: Build dists
      run: |
        python -m build
    - name: Make Release
      uses: aio-libs/create-release@v1.6.6
      with:
        changes_file: CHANGES.rst
        name: aiohttp-apischema
        version_file: aiohttp_apischema/__init__.py
        github_token: ${{ secrets.GITHUB_TOKEN }}
        dist_dir: dist
        fix_issue_regex: "`#(\\d+) <https://github.com/aio-libs/aiohttp-apischema/issues/\\1>`"
        fix_issue_repl: "(#\\1)"
    - name: >-
        Publish üêçüì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
